function stim = etstim(ax, stimdir, x, y, w, h)

%% Defaults for non-values


%% Create storage structure
stim = struct(...
    'Type', [], ... % File type
    'Pos', [x y w h], ... % Position (x, y, width, height)
    'Dir', stimdir, ... % File location
    'Obj', [] ... % Object handle
    );

%% Determine stim type
stimdirSplt = strsplit(stimdir, '.');
stimExt = stimdirSplt{end};
imgExts = imformats;
switch stimExt
    %% If stimulus is an image
    case [imgExts.ext] % If stimulus is an image...
        %% Read image
        [img, ~, alpha] = imread(stimdir); % Read image
        if isempty(alpha) % If no transparency data...
            alpha = ones(size(img, [1,2])); % Set all pixels to fully opaque
        end
        
        %% Defaults for non-values
        if isempty(w) % If width is blank...
            s = size(img, 2); % Default to full size
        end
        if isempty(h) % If height is blank...
            h = size(img, 1); % Default to full size
        end
        if isempty(x) % If x is blank...
            x = (ax.XLim(2) - w) / 2; % Default to center
        end
        if isempty(y) % If y is blank...
            y = (ax.YLim(2) - h) / 2; % Default to center
        end
        
        %% Draw image
        stim.Obj = image(ax, ...
            'XData', [x, x + w], ... % Position horizontal
            'YData', [y, y + h], ... % Position vertical
            'CData', flipud(img), ... % Flip upside down as y axes are backwards
            'AlphaData', flipud(alpha) ... % Apply transparency
            );
    case 'txt'
        %% Read text
        txt = fileread(stimdir);
        
        %% Defaults for non-values
        if isempty(w) % If width is blank...
            w = 0.8; % Default to full size
        end
        if isempty(h) % If height is blank...
            h = 0.2; % Default to full size
        end
        if isempty(x) % If x is blank...
            x = 0.1; % Default to center
        end
        if isempty(y) % If y is blank...
            y = 0.1; % Default to center
        end
        
        %% Draw text
        stim.Obj = annotation('textbox', ...
            'EdgeColor', 'none', ...
            'Position', [x y w h], ...
            'String', txt);
end




